import numpy as np
import matplotlib.pyplot as plt
from sklearn import neighbors
import os
np.random.seed(0)

# 그림 저장 폴더
PROJECT_ROOT_DIR = "."
CHAPTER_ID = "ch03.Algorithms"

# 이미지 저장 폴더명 조립
def image_path(fig_id):
    return os.path.join(PROJECT_ROOT_DIR, "images", CHAPTER_ID, fig_id)

def save_fig(fig_id, tight_layout=True):
    print("그림 저장중...", fig_id)
    if tight_layout:
        plt.tight_layout()
    plt.savefig(image_path(fig_id) + ".png", format='png', dpi=300)

X = np.sort(5 * np.random.rand(40, 1), axis=0)
T = np.linspace(0, 5, 500)[:, np.newaxis]
y = np.sin(X).ravel()

# Add noise to targets
y[::5] += 1 * (0.5 - np.random.rand(8))

k = 0

for i in range(4):
    k = 2*i + 3
    knn = neighbors.KNeighborsRegressor(k)
    y_ = knn.fit(X, y).predict(T)

    plt.scatter(X, y, color='darkorange', label='data')
    plt.plot(T, y_, color='navy', label='prediction')
    plt.axis('tight')
    plt.legend()
    plt.title("KNeighborsRegressor (k = {})".format(k))
    plt.tight_layout()
    fid = "KNeighborsRegressor_plot_k_{}".format(k)
    save_fig(fid)
    plt.show()
